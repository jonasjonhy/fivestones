package ufps.GUI;


import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import ufps.Mundo.Ficha;
import ufps.Mundo.Fivestones;
import ufps.Mundo.Jugador;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author arjc & ropoman
 */
public class FormTablero extends javax.swing.JFrame {
    private byte timepo2;
    private Fivestones myJuego;
    private Graphics g;
    private Graphics g2;
    private boolean estado=false;
    private byte tiempo;
    private Temporizador time;
    private Jugador[]myJugadores= new Jugador[2];
    private byte indice=0;
    
     /**
     * Creates new form FormTablero
     */
    public FormTablero(Fivestones myJuego, byte x) {
        
        try{
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }catch(Exception e){
            System.err.println("Error con look");
        }
        
        initComponents();
        
        this.myJuego=myJuego;
        
        configuracionesIniciales(x);
        
        this.cerrar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        PnlPrincipal = new ufps.GUI.TableroDeJuego();
        jLabel1 = new javax.swing.JLabel();
        panelConf = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        imagenJugador1 = new javax.swing.JLabel();
        imagenJugador2 = new javax.swing.JLabel();
        lblPuntaje1 = new javax.swing.JLabel();
        lblPuntaje2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pnlTiempo = new javax.swing.JPanel();
        txtTurno = new javax.swing.JTextField();
        cmdPintar = new javax.swing.JButton();
        cmdSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        PnlPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        PnlPrincipal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(119, 62, 9), 2, true));
        PnlPrincipal.setAlignmentX(1.0F);
        PnlPrincipal.setAlignmentY(1.0F);
        PnlPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PnlPrincipalMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PnlPrincipalLayout = new javax.swing.GroupLayout(PnlPrincipal);
        PnlPrincipal.setLayout(PnlPrincipalLayout);
        PnlPrincipalLayout.setHorizontalGroup(
            PnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );
        PnlPrincipalLayout.setVerticalGroup(
            PnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ufps/Imagenes/imagenLogo_1.png"))); // NOI18N

        panelConf.setBackground(new java.awt.Color(255, 255, 255));
        panelConf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Info del Juego", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Jugadores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12))); // NOI18N

        lbl1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lbl1.setText("Nombre1");

        lbl2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lbl2.setText("Nombre2");

        lblPuntaje1.setText("0");

        lblPuntaje2.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblPuntaje1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(lblPuntaje2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl1)
                                .addComponent(lbl2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagenJugador2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagenJugador1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lbl1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPuntaje1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl2)
                        .addGap(1, 1, 1)
                        .addComponent(lblPuntaje2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(imagenJugador1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(imagenJugador2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tiempo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        pnlTiempo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 51), 2, true));

        javax.swing.GroupLayout pnlTiempoLayout = new javax.swing.GroupLayout(pnlTiempo);
        pnlTiempo.setLayout(pnlTiempoLayout);
        pnlTiempoLayout.setHorizontalGroup(
            pnlTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 141, Short.MAX_VALUE)
        );
        pnlTiempoLayout.setVerticalGroup(
            pnlTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(pnlTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        txtTurno.setEditable(false);
        txtTurno.setFont(new java.awt.Font("Century", 2, 12)); // NOI18N

        cmdPintar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmdPintar.setText("Empesar Partida");
        cmdPintar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPintarActionPerformed(evt);
            }
        });

        cmdSalir.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmdSalir.setText("Abandonar partida");
        cmdSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelConfLayout = new javax.swing.GroupLayout(panelConf);
        panelConf.setLayout(panelConfLayout);
        panelConfLayout.setHorizontalGroup(
            panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConfLayout.createSequentialGroup()
                        .addGroup(panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTurno))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConfLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmdSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdPintar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(23, 23, 23))))
        );
        panelConfLayout.setVerticalGroup(
            panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmdPintar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(cmdSalir)
                .addContainerGap())
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ufps/Imagenes/barraGrande.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ufps/Imagenes/barraGrande.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ufps/Imagenes/logo2.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelConf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelConf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdPintarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPintarActionPerformed

        this.cmdPintar.setEnabled(false);

        Lapiz arriba= new Lapiz(g, this.PnlPrincipal.getHeight(), true, this);
        Lapiz abajo= new Lapiz(g, this.PnlPrincipal.getHeight(), false, this);
        
        arriba.start();
        abajo.start();
        
    }//GEN-LAST:event_cmdPintarActionPerformed

    private void PnlPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PnlPrincipalMouseClicked
         // TODO add your handling code here:

        if(!this.estado)
            return;
       
        int x= evt.getX();
        int y= evt.getY();
  
        if(x>this.PnlPrincipal.getHeight() || y>this.PnlPrincipal.getHeight()){
            System.out.println("error");
            return;
        }
        
        int tamFicha=this.PnlPrincipal.getHeight()/10;
        
        if(y%tamFicha==0|| x%tamFicha==0){
            JOptionPane.showMessageDialog(rootPane, "ha oprimido usted una posicion invalida");
            return;
        }
        int indiceX=x/tamFicha; 
        int indiceY=y/tamFicha;

        comprobarMovimiento(indiceX, indiceY, false);
       
     
    }//GEN-LAST:event_PnlPrincipalMouseClicked

    private void cmdSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSalirActionPerformed
        // TODO add your handling code here:
        
        int x= JOptionPane.showConfirmDialog(panelConf, "Esta seguro que desea Terminar la partida?");
        
        if(JOptionPane.OK_OPTION==x){
        
        if(this.tiempo!=0)
              this.time.suspend();
        this.myJuego.getJugada(this.myJugadores[this.indice]. getImaFicha(), -1, -1);
        pasarTurno();
        FormFinal salida= new FormFinal(this, false, false);
        salida.setVisible(true);
        this.dispose();
        }
        
    }//GEN-LAST:event_cmdSalirActionPerformed
    
    public void iniciarPartida() {
  
        actualizarCasillaJugadores();    
        
        this.estado=true;
        this.PnlPrincipal.setAtributo(true);
        this.cmdSalir.setEnabled(true);
    }

    public boolean isActivo(int indiceX, int indiceY) {

       if(myJuego.getFicha(indiceX, indiceY).isActiva())
           return true;
       return false;
         
    }
        
    public void comprobarMovimiento( int indiceX, int indiceY, boolean valor ){
        
         byte bandera=realizarJugada(indiceX, indiceY);
                switch(bandera){

          case 0 : 
              if(this.tiempo!=0)
              this.time.suspend();
              JOptionPane.showMessageDialog(panelConf, "Juego terminado");
              break;
              
          case 1 :
              pintarCuadro(indiceX, indiceY); 
              ganador(false);
              break;
              
          case 2 : 
              pintarCuadro(indiceX, indiceY);
              ganador(false);
              break;
              
          case 3: 
              pintarCuadro(indiceX, indiceY);
              this.continuarJugada(valor);
              break;
              
          case 4:
              JOptionPane.showMessageDialog(panelConf, "La Posicion oprimida ya se encuentra activa");
              break;
              
          case 5:
              pintarCuadro(indiceX, indiceY);
              ganador(true);
              break;
      } 
    }
    
    private void ganador(boolean valor){
        
              FormFinal salida2= new FormFinal(this, true, valor);
              salida2.setVisible(true);
              actualizarPuntaje();
              this.cmdSalir.setEnabled(false);
              this.PnlPrincipal.repaint();
              if(this.tiempo!=0)
              this.time.suspend();
              this.estado=false;
    }
    
    private void continuarJugada(boolean reloj){
        pasarTurno();
        if(!reloj){ 
            if(this.tiempo!=0){

                this.time.suspend();
                this.estado=false;
                this.time.cambiarDato(this.tiempo);

                this.dormir(1);

                this.time.resume();
                this.estado=true;
            }
        }
              actualizarCasillaJugadores();
    }
  
    private void dormir(int val){
        try {
            Thread.sleep(val*1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Temporizador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void pintarCuadro(int indiceX, int indiceY ){

       Ficha myFicha=this.myJuego.getFicha(indiceX, indiceY);

       ImageIcon ima= new ImageIcon(this.myJugadores[this.indice].getImaFicha());
       
       g.drawImage( ima.getImage() ,myFicha.getX()+1 , myFicha.getY()+1 , rootPane);

    }
    
    public void pasarTurno(){
        if(this.indice==0){
           this.indice++;
           
           this.time=new Temporizador(this.g2, this.tiempo, Color.BLACK, this.pnlTiempo.getBackground(), this);
           
           this.time.start();
        }
           else
       this.indice--;
    }
    
    public byte realizarJugada(int indiceX, int indiceY){
        
        
        return this.myJuego.getJugada(this.myJugadores[this.indice].getImaFicha(), indiceX, indiceY);
        
        
    }

    public void actualizarCasillaJugadores(){
        this.txtTurno.setText("el turno es de "+this.myJugadores[this.indice].toString());
    }
    
    public Fivestones getMyJuego() {
        return myJuego;
    }

    public void setMyJuego(Fivestones myJuego) {
        this.myJuego = myJuego;
    }

    public Jugador[] getMyJugadores() {
        return myJugadores;
    }

    private void actualizarPuntaje(){
        
       this.lblPuntaje1.setText(this.myJugadores[0].getPuntos()+"");
       this.lblPuntaje2.setText(this.myJugadores[1].getPuntos()+"");
        
    }
    
    public void reJugar(){
       
       this.cmdPintar.setEnabled(true); 
       this.PnlPrincipal.setAtributo(false);
       this.PnlPrincipal.repaint();
       this.estado=false;
       this.cmdSalir.setEnabled(false);
       this.actualizarCasillaJugadores();
    }
    
    public byte getIndice(){
        return this.indice;
    }
    
    private void cerrar(){
        
        final FormTablero tab= this;
        final Fivestones five=this.myJuego;
        final Jugador[] jugadores=this.myJugadores;
        final int ind=this.indice;
        this.addWindowListener(new WindowAdapter() {
            
        @Override
        public void windowClosing(WindowEvent e) { 
           
            if(estado){
           int x= JOptionPane.showConfirmDialog(null, "Esta seguro que desea salir?");
        
        if(JOptionPane.OK_OPTION==x){
            five.getJugada(jugadores[ind].getImaFicha(), -1, -1);
            pasarTurno();
            FormFinal salida2= new FormFinal(tab, false, false);
              salida2.setVisible(true);
              tab.dispose();
        }
            }
            else{
                int x= JOptionPane.showConfirmDialog(null, "Esta seguro que desea salir?");
        
        if(JOptionPane.OK_OPTION==x){
        System.exit(0);
        }
        
            }
            
            }
        
                    });
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ufps.GUI.TableroDeJuego PnlPrincipal;
    private javax.swing.JButton cmdPintar;
    private javax.swing.JButton cmdSalir;
    private javax.swing.JLabel imagenJugador1;
    private javax.swing.JLabel imagenJugador2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lblPuntaje1;
    private javax.swing.JLabel lblPuntaje2;
    private javax.swing.JPanel panelConf;
    private javax.swing.JPanel pnlTiempo;
    private javax.swing.JTextField txtTurno;
    // End of variables declaration//GEN-END:variables

    private void configuracionesIniciales( byte x) {
        this.setLocationRelativeTo(null);
        //cambia fondo
        this.PnlPrincipal.setDirFondo("./src/ufps/imagenes/fondo.png");
        this.PnlPrincipal.repaint();
        
        
        this.myJuego.llenarMatrizFicha(this.PnlPrincipal.getHeight());
        
        this.cmdSalir.setEnabled(false);
        this.PnlPrincipal.setPanelDeJuego(this);
        
        g=this.PnlPrincipal.getGraphics();
        g2=this.pnlTiempo.getGraphics();
            
        this.tiempo=x;
                 
        myJugadores[0]=this.myJuego.getJugador1();
        myJugadores[1]=this.myJuego.getJugador2();
        
        this.lbl1.setText(myJugadores[0].getNombre());
        this.lbl2.setText(myJugadores[1].getNombre());
        
        this.imagenJugador1.setIcon(new ImageIcon(myJugadores[0].getImaFicha()));
        this.imagenJugador2.setIcon(new ImageIcon(myJugadores[1].getImaFicha()));
        
    }
    
    public void setEstado(boolean estado){
        this.estado=estado;
    }

}
